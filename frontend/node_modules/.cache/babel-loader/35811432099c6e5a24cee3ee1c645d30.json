{"ast":null,"code":"var _jsxFileName = \"/home/desktop-47/Desktop/LoginTest/frountend/src/Component/register.js\";\nimport { Button, TextField } from \"@mui/material\";\nimport { Field, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { registerData } from \"../Redux/Action/action\";\nimport { SignupSchema } from \"../schemaValidation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Register extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: null,\n      password: null,\n      email: null\n    };\n  }\n  Register() {\n    let register_object = this.state;\n    this.props.dispatch(registerData(register_object));\n    this.setState({\n      username: \"\",\n      password: \"\",\n      email: \"\"\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"SignUp Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"username\",\n            variant: \"outlined\",\n            size: \"small\",\n            onChange: e => {\n              this.setState({\n                username: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"email\",\n            variant: \"outlined\",\n            size: \"small\",\n            onChange: e => {\n              this.setState({\n                email: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"password\",\n            variant: \"outlined\",\n            size: \"small\",\n            onChange: e => {\n              this.setState({\n                password: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => {\n              this.Register();\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"If you have allReady Account. Please \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\nconst mapStateToProps = registerData => ({\n  registerData\n});\nfunction mapDispatchToProps(dispatch) {\n  let actions = bindActionCreators({\n    registerData\n  });\n  return {\n    ...actions,\n    dispatch\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"names":["Button","TextField","Field","Form","Formik","React","connect","bindActionCreators","registerData","SignupSchema","Register","Component","constructor","state","username","password","email","register_object","props","dispatch","setState","render","e","target","value","mapStateToProps","mapDispatchToProps","actions"],"sources":["/home/desktop-47/Desktop/LoginTest/frountend/src/Component/register.js"],"sourcesContent":["import { Button, TextField } from \"@mui/material\";\nimport { Field, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { registerData } from \"../Redux/Action/action\";\nimport { SignupSchema } from \"../schemaValidation\";\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: null,\n      password: null,\n      email: null,\n    };\n  }\n  Register() {\n    let register_object = this.state;\n    this.props.dispatch(registerData(register_object));\n    this.setState({\n      username: \"\",\n      password: \"\",\n      email: \"\",\n    });\n  }\n  render() {\n    return (\n      <>\n        <div className=\"form\">\n          <h4>SignUp Form</h4>\n          <div className=\"form-field\">\n            <TextField\n              id=\"outlined-basic\"\n              label=\"username\"\n              variant=\"outlined\"\n              size=\"small\"\n              onChange={(e) => {\n                this.setState({ username: e.target.value });\n              }}\n            />\n          </div>\n\n          <div className=\"form-field\">\n            <TextField\n              id=\"outlined-basic\"\n              label=\"email\"\n              variant=\"outlined\"\n              size=\"small\"\n              onChange={(e) => {\n                this.setState({ email: e.target.value });\n              }}\n            />\n          </div>\n\n          <div className=\"form-field\">\n            <TextField\n              id=\"outlined-basic\"\n              label=\"password\"\n              variant=\"outlined\"\n              size=\"small\"\n              onChange={(e) => {\n                this.setState({ password: e.target.value });\n              }}\n            />\n          </div>\n\n          <div className=\"form-field\">\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                this.Register();\n              }}\n            >\n              Register\n            </Button>\n          </div>\n          <p>\n            If you have allReady Account. Please <a href=\"/\">Login</a>\n          </p>\n          {/* <Formik\n            initialValues={{\n              userName: \"\",\n              email: \"\",\n              password: \"\",\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={(values) => {\n              console.log(values);\n            }}\n          >\n            {({ errors, touched }) => (\n              <Form>\n                <div className=\"form-field\">\n                  <TextField\n                    id=\"outlined-basic\"\n                    label=\"username\"\n                    name=\"userName\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                  />\n                  {errors.userName && touched.userName ? (\n                    <div className=\"error\">{errors.userName}</div>\n                  ) : null}\n                </div>\n                <div className=\"form-field\">\n                  <TextField\n                    id=\"outlined-basic\"\n                    label=\"email\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    name=\"email\"\n                  />\n                  {errors.email && touched.email ? (\n                    <div className=\"error\">{errors.email}</div>\n                  ) : null}\n                </div>\n                <div className=\"form-field\">\n                  <TextField\n                    id=\"outlined-basic\"\n                    label=\"password\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    name=\"password\"\n            />\n                  {errors.password && touched.password ? (\n                    <div className=\"error\">{errors.password}</div>\n                  ) : null}\n                </div>\n                <div className=\"form-field\">\n                  <Button variant=\"contained\" type=\"submit\">Register</Button>\n                </div>\n                <p>\n            If you have allReady Account. Please <a href=\"/\">Login</a>\n          </p>\n              </Form>\n            )}\n          </Formik> */}\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (registerData) => ({ registerData });\n\nfunction mapDispatchToProps(dispatch) {\n  let actions = bindActionCreators({ registerData });\n  return { ...actions, dispatch };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACjD,SAASC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,QAAQ;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,kBAAkB,QAAQ,OAAO;AAC1C,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,YAAY,QAAQ,qBAAqB;AAAC;AAAA;AAEnD,MAAMC,QAAQ,SAASL,KAAK,CAACM,SAAS,CAAC;EACrCC,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE;IACT,CAAC;EACH;EACAN,QAAQ,GAAG;IACT,IAAIO,eAAe,GAAG,IAAI,CAACJ,KAAK;IAChC,IAAI,CAACK,KAAK,CAACC,QAAQ,CAACX,YAAY,CAACS,eAAe,CAAC,CAAC;IAClD,IAAI,CAACG,QAAQ,CAAC;MACZN,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ;EACAK,MAAM,GAAG;IACP,oBACE;MAAA,uBACE;QAAK,SAAS,EAAC,MAAM;QAAA,wBACnB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,eACpB;UAAK,SAAS,EAAC,YAAY;UAAA,uBACzB,QAAC,SAAS;YACR,EAAE,EAAC,gBAAgB;YACnB,KAAK,EAAC,UAAU;YAChB,OAAO,EAAC,UAAU;YAClB,IAAI,EAAC,OAAO;YACZ,QAAQ,EAAGC,CAAC,IAAK;cACf,IAAI,CAACF,QAAQ,CAAC;gBAAEN,QAAQ,EAAEQ,CAAC,CAACC,MAAM,CAACC;cAAM,CAAC,CAAC;YAC7C;UAAE;YAAA;YAAA;YAAA;UAAA;QACF;UAAA;UAAA;UAAA;QAAA,QACE,eAEN;UAAK,SAAS,EAAC,YAAY;UAAA,uBACzB,QAAC,SAAS;YACR,EAAE,EAAC,gBAAgB;YACnB,KAAK,EAAC,OAAO;YACb,OAAO,EAAC,UAAU;YAClB,IAAI,EAAC,OAAO;YACZ,QAAQ,EAAGF,CAAC,IAAK;cACf,IAAI,CAACF,QAAQ,CAAC;gBAAEJ,KAAK,EAAEM,CAAC,CAACC,MAAM,CAACC;cAAM,CAAC,CAAC;YAC1C;UAAE;YAAA;YAAA;YAAA;UAAA;QACF;UAAA;UAAA;UAAA;QAAA,QACE,eAEN;UAAK,SAAS,EAAC,YAAY;UAAA,uBACzB,QAAC,SAAS;YACR,EAAE,EAAC,gBAAgB;YACnB,KAAK,EAAC,UAAU;YAChB,OAAO,EAAC,UAAU;YAClB,IAAI,EAAC,OAAO;YACZ,QAAQ,EAAGF,CAAC,IAAK;cACf,IAAI,CAACF,QAAQ,CAAC;gBAAEL,QAAQ,EAAEO,CAAC,CAACC,MAAM,CAACC;cAAM,CAAC,CAAC;YAC7C;UAAE;YAAA;YAAA;YAAA;UAAA;QACF;UAAA;UAAA;UAAA;QAAA,QACE,eAEN;UAAK,SAAS,EAAC,YAAY;UAAA,uBACzB,QAAC,MAAM;YACL,OAAO,EAAC,WAAW;YACnB,OAAO,EAAE,MAAM;cACb,IAAI,CAACd,QAAQ,EAAE;YACjB,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAGK;UAAA;UAAA;UAAA;QAAA,QACL,eACN;UAAA,iEACuC;YAAG,IAAI,EAAC,GAAG;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAU;QAAA;UAAA;UAAA;UAAA;QAAA,QACxD;MAAA;QAAA;QAAA;QAAA;MAAA;IA2DA,iBACL;EAEP;AACF;AACA,MAAMe,eAAe,GAAIjB,YAAY,KAAM;EAAEA;AAAa,CAAC,CAAC;AAE5D,SAASkB,kBAAkB,CAACP,QAAQ,EAAE;EACpC,IAAIQ,OAAO,GAAGpB,kBAAkB,CAAC;IAAEC;EAAa,CAAC,CAAC;EAClD,OAAO;IAAE,GAAGmB,OAAO;IAAER;EAAS,CAAC;AACjC;AAEA,eAAeb,OAAO,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,CAAChB,QAAQ,CAAC"},"metadata":{},"sourceType":"module"}