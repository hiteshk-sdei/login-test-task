{"ast":null,"code":"var _jsxFileName = \"/home/desktop-47/Desktop/LoginTest/frountend/src/Component/login.js\";\nimport { Button, TextField } from \"@mui/material\";\nimport { Navigate } from \"react-router-dom\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { loginData } from \"../Redux/Action/action\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SigninSchema = Yup.object().shape({\n  username: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\n  password: Yup.string().min(2, \"Too Short!\").required(\"Required\")\n});\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: false\n    };\n  }\n  render() {\n    var _this$props$state, _this$props$state$use, _this$props$state$use2;\n    let status = (_this$props$state = this.props.state) === null || _this$props$state === void 0 ? void 0 : (_this$props$state$use = _this$props$state.userReducer) === null || _this$props$state$use === void 0 ? void 0 : (_this$props$state$use2 = _this$props$state$use.login_data) === null || _this$props$state$use2 === void 0 ? void 0 : _this$props$state$use2.status;\n    if (status === 200) {\n      // this.setState({...this.state, user:true})\n      window.location = '/dashboard';\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.user && /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/dashboard\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"SignIn \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            username: \"\",\n            password: \"\"\n          },\n          validationSchema: SigninSchema,\n          onSubmit: (values, _ref) => {\n            let {\n              resetForm\n            } = _ref;\n            this.props.dispatch(loginData(values));\n            // resetForm({ values: \"\" });\n          },\n\n          render: _ref2 => {\n            let {\n              handleSubmit,\n              handleChange,\n              values,\n              touched,\n              errors\n            } = _ref2;\n            console.log('touched: ', touched, 'errors: ', errors);\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: errors.username ? true : false,\n                  id: \"username\",\n                  name: \"username\",\n                  label: \"User Name\",\n                  size: \"small\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  value: values.username,\n                  onBlur: handleChange,\n                  onChange: handleChange,\n                  helperText: errors.username && errors.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: errors.password ? true : false,\n                  id: \"password\",\n                  name: \"password\",\n                  label: \"Password\",\n                  size: \"small\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  value: values.password,\n                  onBlur: handleChange,\n                  onChange: handleChange,\n                  helperText: errors.password && errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  type: \"submit\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"If you have allReady Account. Please \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/register\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 11\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: \"\",\n            password: \"\"\n          },\n          validationSchema: SigninSchema,\n          onSubmit: (values, _ref3) => {\n            let {\n              setSubmitting\n            } = _ref3;\n            alert(\"Form is validated! Submitting the form...\");\n            console.log(values);\n            setSubmitting(false);\n          },\n          children: _ref4 => {\n            let {\n              touched,\n              errors,\n              isSubmitting,\n              values,\n              handleChange\n            } = _ref4;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              noValidate: true,\n              children: [console.log(4545454545, touched, errors), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"username\",\n                  name: \"username\",\n                  placeholder: \"Enter username\",\n                  className: `form-control ${touched.username && errors.username ? \"is-invalid\" : \"\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary btn-block\",\n                disabled: isSubmitting,\n                children: isSubmitting ? \"Please wait...\" : \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nconst mapStateToProps = state => ({\n  state\n});\nfunction mapDispatchToProps(dispatch) {\n  let actions = bindActionCreators({\n    loginData\n  });\n  return {\n    ...actions,\n    dispatch\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"names":["Button","TextField","Navigate","React","connect","bindActionCreators","loginData","Yup","Formik","Form","Field","ErrorMessage","SigninSchema","object","shape","username","string","min","required","password","Login","Component","constructor","state","user","render","status","props","userReducer","login_data","window","location","values","resetForm","dispatch","handleSubmit","handleChange","touched","errors","console","log","email","setSubmitting","alert","isSubmitting","mapStateToProps","mapDispatchToProps","actions"],"sources":["/home/desktop-47/Desktop/LoginTest/frountend/src/Component/login.js"],"sourcesContent":["import { Button, TextField } from \"@mui/material\";\nimport { Navigate } from \"react-router-dom\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { loginData } from \"../Redux/Action/action\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\n\n\nexport const SigninSchema = Yup.object().shape({\n  username: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\n  password: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\n});\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state={\n      user:false\n    }\n  }\n \n  render() {\n    let status = this.props.state?.userReducer?.login_data?.status\n    if(status===200){\n      // this.setState({...this.state, user:true})\n      window.location = '/dashboard'\n    }\n\n    return (\n      <>\n      {this.state.user && (\n          <Navigate to=\"/dashboard\" replace={true} />\n        \n        )}\n        <div className=\"form\">\n        <h2>SignIn </h2>\n          <Formik\n            initialValues={{\n              username: \"\",\n              password: \"\",\n            }}\n            validationSchema={SigninSchema}\n            onSubmit={(values ,{resetForm}) => {\n              this.props.dispatch(loginData(values))\n              // resetForm({ values: \"\" });\n            }}\n            render={({ handleSubmit, handleChange, values, touched, errors }) => \n      {\n        console.log('touched: ', touched, 'errors: ', errors);\n        return (\n          <Form>\n                <div className=\"form-field\">\n                  <TextField\n                    error={errors.username ? true : false}\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"User Name\"\n                    size=\"small\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={values.username}\n                    onBlur={handleChange}\n                    onChange={handleChange}\n                    helperText={errors.username && errors.username}\n                  />\n                </div>\n\n                <div className=\"form-field\">\n                <TextField\n                    error={errors.password ? true : false}\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    size=\"small\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={values.password}\n                    onBlur={handleChange}\n                    onChange={handleChange}\n                    helperText={errors.password && errors.password}\n                  />\n                </div>\n                <div className=\"form-field\">\n                  <Button variant=\"contained\" type=\"submit\">\n                    Login\n                  </Button>\n                </div>\n                <p>\n                  If you have allReady Account. Please <a href=\"/register\">Register</a>\n                </p>\n              </Form>\n        );\n      }}\n          />\n\n\n\n\n\n            <Formik\n              initialValues={{ email: \"\", password: \"\" }}\n              validationSchema={SigninSchema}\n              onSubmit={(values, { setSubmitting }) => {\n                alert(\"Form is validated! Submitting the form...\");\n                console.log(values);\n                setSubmitting(false);\n              }}\n            >\n              {({ touched, errors, isSubmitting, values, handleChange }) => (\n                <Form noValidate>\n                  {console.log(4545454545, touched, errors)}\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <Field\n                      type=\"username\"\n                      name=\"username\"\n                      placeholder=\"Enter username\"\n                      className={`form-control ${\n                        touched.username && errors.username ? \"is-invalid\" : \"\"\n                      }`}\n                    />\n                    {/* <TextField\n                      error={errors.username ? true : false}\n                      // id=\"username\"\n                      name=\"username\"\n                      label=\"User Name\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      fullWidth\n                      value={values.username}\n                      onBlur={handleChange}\n                      onChange={handleChange}\n                      helperText={errors.username && errors.username}\n                    /> */}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    {/* <Field\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Enter password\"\n                      className={`form-control ${\n                        touched.password && errors.password ? \"is-invalid\" : \"\"\n                      }`}\n                    />\n                    <ErrorMessage\n                      component=\"div\"\n                      name=\"password\"\n                      className=\"invalid-feedback\"\n                    /> */}\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={isSubmitting}\n                  >\n                    {isSubmitting ? \"Please wait...\" : \"Submit\"}\n                  </button>\n                </Form>\n              )}\n            </Formik>\n\n\n\n\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ state });\n\nfunction mapDispatchToProps(dispatch) {\n  let actions = bindActionCreators({ loginData });\n  return { ...actions, dispatch };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}