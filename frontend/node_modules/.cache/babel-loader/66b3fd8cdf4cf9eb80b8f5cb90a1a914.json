{"ast":null,"code":"var _jsxFileName = \"/home/desktop-47/Desktop/LoginTest/frountend/src/Component/login.js\";\nimport { Button, TextField } from \"@mui/material\";\nimport { Navigate } from \"react-router-dom\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { loginData } from \"../Redux/Action/action\";\nimport * as Yup from \"yup\";\nimport { Form, Formik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SigninSchema = Yup.object().shape({\n  username: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\n  password: Yup.string().min(2, \"Too Short!\").required(\"Required\")\n});\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: false\n    };\n  }\n  render() {\n    let status = this.props.state;\n    console.log(\"status\", status);\n    // navigation.navigate('/dashboard')\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.user && /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/dashboard\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            username: \"\",\n            password: \"\"\n          },\n          validationSchema: SigninSchema,\n          onSubmit: (values, _ref) => {\n            let {\n              resetForm\n            } = _ref;\n            this.props.dispatch(loginData(values));\n            // resetForm({ values: \"\" });\n          },\n          children: _ref2 => {\n            let {\n              errors,\n              touched,\n              values,\n              handleChange\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: errors.username && touched.username,\n                  id: \"username\",\n                  name: \"username\",\n                  label: \"User Name\",\n                  size: \"small\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  onBlur: handleChange,\n                  onChange: handleChange,\n                  helperText: errors.username && errors.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: errors.password && touched.password,\n                  id: \"password\",\n                  name: \"password\",\n                  label: \"Password\",\n                  size: \"small\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  onBlur: handleChange,\n                  onChange: handleChange,\n                  helperText: errors.password && errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  type: \"submit\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"If you have allReady Account. Please \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/register\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nconst mapStateToProps = state => ({\n  state\n});\nfunction mapDispatchToProps(dispatch) {\n  let actions = bindActionCreators({\n    loginData\n  });\n  return {\n    ...actions,\n    dispatch\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"names":["Button","TextField","Navigate","React","connect","bindActionCreators","loginData","Yup","Form","Formik","SigninSchema","object","shape","username","string","min","required","password","Login","Component","constructor","state","user","render","status","props","console","log","values","resetForm","dispatch","errors","touched","handleChange","mapStateToProps","mapDispatchToProps","actions"],"sources":["/home/desktop-47/Desktop/LoginTest/frountend/src/Component/login.js"],"sourcesContent":["import { Button, TextField } from \"@mui/material\";\nimport { Navigate } from \"react-router-dom\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { loginData } from \"../Redux/Action/action\";\nimport * as Yup from \"yup\";\nimport { Form, Formik } from \"formik\";\n\nexport const SigninSchema = Yup.object().shape({\n  username: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\n  password: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\n});\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state={\n      user:false\n    }\n  }\n \n  render() {\n    \n    let status = this.props.state;\n    console.log(\"status\",status)\n    // navigation.navigate('/dashboard')\n    return (\n      <>\n      {this.state.user && (\n          <Navigate to=\"/dashboard\" replace={true} />\n        )}\n        <div className=\"form\">\n          <Formik\n            initialValues={{\n              username: \"\",\n              password: \"\",\n            }}\n            validationSchema={SigninSchema}\n            onSubmit={(values ,{resetForm}) => {\n              this.props.dispatch(loginData(values))\n              // resetForm({ values: \"\" });\n            }}\n          >\n            {({ errors, touched, values, handleChange }) => (\n              <Form>\n                <div className=\"form-field\">\n                  <TextField\n                    error={errors.username && touched.username}\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"User Name\"\n                    size=\"small\"\n                    variant=\"outlined\"\n                    fullWidth\n                    onBlur={handleChange}\n                    onChange={handleChange}\n                    helperText={errors.username && errors.username}\n                  />\n                </div>\n\n                <div className=\"form-field\">\n                <TextField\n                    error={errors.password && touched.password}\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    size=\"small\"\n                    variant=\"outlined\"\n                    fullWidth\n                    onBlur={handleChange}\n                    onChange={handleChange}\n                    helperText={errors.password && errors.password}\n                  />\n                </div>\n                <div className=\"form-field\">\n                  <Button variant=\"contained\" type=\"submit\">\n                    Login\n                  </Button>\n                </div>\n                <p>\n                  If you have allReady Account. Please <a href=\"/register\">Register</a>\n                </p>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ state });\n\nfunction mapDispatchToProps(dispatch) {\n  let actions = bindActionCreators({ loginData });\n  return { ...actions, dispatch };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACjD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,kBAAkB,QAAQ,OAAO;AAC1C,SAASC,SAAS,QAAQ,wBAAwB;AAClD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,IAAI,EAAEC,MAAM,QAAQ,QAAQ;AAAC;AAAA;AAEtC,OAAO,MAAMC,YAAY,GAAGH,GAAG,CAACI,MAAM,EAAE,CAACC,KAAK,CAAC;EAC7CC,QAAQ,EAAEN,GAAG,CAACO,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC;EAChEC,QAAQ,EAAEV,GAAG,CAACO,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,CAACC,QAAQ,CAAC,UAAU;AACjE,CAAC,CAAC;AAEF,MAAME,KAAK,SAASf,KAAK,CAACgB,SAAS,CAAC;EAClCC,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAC;MACTC,IAAI,EAAC;IACP,CAAC;EACH;EAEAC,MAAM,GAAG;IAEP,IAAIC,MAAM,GAAG,IAAI,CAACC,KAAK,CAACJ,KAAK;IAC7BK,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACH,MAAM,CAAC;IAC5B;IACA,oBACE;MAAA,WACC,IAAI,CAACH,KAAK,CAACC,IAAI,iBACZ,QAAC,QAAQ;QAAC,EAAE,EAAC,YAAY;QAAC,OAAO,EAAE;MAAK;QAAA;QAAA;QAAA;MAAA,QACzC,eACD;QAAK,SAAS,EAAC,MAAM;QAAA,uBACnB,QAAC,MAAM;UACL,aAAa,EAAE;YACbT,QAAQ,EAAE,EAAE;YACZI,QAAQ,EAAE;UACZ,CAAE;UACF,gBAAgB,EAAEP,YAAa;UAC/B,QAAQ,EAAE,CAACkB,MAAM,WAAkB;YAAA,IAAhB;cAACC;YAAS,CAAC;YAC5B,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACxB,SAAS,CAACsB,MAAM,CAAC,CAAC;YACtC;UACF,CAAE;UAAA,UAED;YAAA,IAAC;cAAEG,MAAM;cAAEC,OAAO;cAAEJ,MAAM;cAAEK;YAAa,CAAC;YAAA,oBACzC,QAAC,IAAI;cAAA,wBACH;gBAAK,SAAS,EAAC,YAAY;gBAAA,uBACzB,QAAC,SAAS;kBACR,KAAK,EAAEF,MAAM,CAAClB,QAAQ,IAAImB,OAAO,CAACnB,QAAS;kBAC3C,EAAE,EAAC,UAAU;kBACb,IAAI,EAAC,UAAU;kBACf,KAAK,EAAC,WAAW;kBACjB,IAAI,EAAC,OAAO;kBACZ,OAAO,EAAC,UAAU;kBAClB,SAAS;kBACT,MAAM,EAAEoB,YAAa;kBACrB,QAAQ,EAAEA,YAAa;kBACvB,UAAU,EAAEF,MAAM,CAAClB,QAAQ,IAAIkB,MAAM,CAAClB;gBAAS;kBAAA;kBAAA;kBAAA;gBAAA;cAC/C;gBAAA;gBAAA;gBAAA;cAAA,QACE,eAEN;gBAAK,SAAS,EAAC,YAAY;gBAAA,uBAC3B,QAAC,SAAS;kBACN,KAAK,EAAEkB,MAAM,CAACd,QAAQ,IAAIe,OAAO,CAACf,QAAS;kBAC3C,EAAE,EAAC,UAAU;kBACb,IAAI,EAAC,UAAU;kBACf,KAAK,EAAC,UAAU;kBAChB,IAAI,EAAC,OAAO;kBACZ,OAAO,EAAC,UAAU;kBAClB,SAAS;kBACT,MAAM,EAAEgB,YAAa;kBACrB,QAAQ,EAAEA,YAAa;kBACvB,UAAU,EAAEF,MAAM,CAACd,QAAQ,IAAIc,MAAM,CAACd;gBAAS;kBAAA;kBAAA;kBAAA;gBAAA;cAC/C;gBAAA;gBAAA;gBAAA;cAAA,QACE,eACN;gBAAK,SAAS,EAAC,YAAY;gBAAA,uBACzB,QAAC,MAAM;kBAAC,OAAO,EAAC,WAAW;kBAAC,IAAI,EAAC,QAAQ;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAEhC;gBAAA;gBAAA;gBAAA;cAAA,QACL,eACN;gBAAA,iEACuC;kBAAG,IAAI,EAAC,WAAW;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAa;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACnE;YAAA;cAAA;cAAA;cAAA;YAAA,QACC;UAAA;QACR;UAAA;UAAA;UAAA;QAAA;MACM;QAAA;QAAA;QAAA;MAAA,QACL;IAAA,gBACL;EAEP;AACF;AAEA,MAAMiB,eAAe,GAAIb,KAAK,KAAM;EAAEA;AAAM,CAAC,CAAC;AAE9C,SAASc,kBAAkB,CAACL,QAAQ,EAAE;EACpC,IAAIM,OAAO,GAAG/B,kBAAkB,CAAC;IAAEC;EAAU,CAAC,CAAC;EAC/C,OAAO;IAAE,GAAG8B,OAAO;IAAEN;EAAS,CAAC;AACjC;AAEA,eAAe1B,OAAO,CAAC8B,eAAe,EAAEC,kBAAkB,CAAC,CAACjB,KAAK,CAAC"},"metadata":{},"sourceType":"module"}