{"ast":null,"code":"import instance from \"../../Utils/api\";\nimport { LOGIN_SUCCESS, REGISTER_SUCCESS, AUTH_ERROR, LOGOUT_SUCCESS } from \"../actionType\";\nexport const login = data => {\n  return dispatch => {\n    return instance.post('/signin', data).then(data => {\n      if (data.status === 200) {\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: data\n        });\n      } else {\n        dispatch({\n          type: AUTH_ERROR,\n          payload: error.response\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: error.response\n      });\n    });\n  };\n};\nexport const register = data => {\n  return dispatch => {\n    return instance.post('/signup', data).then(data => {\n      if (data.status === 200) {\n        dispatch({\n          type: REGISTER_SUCCESS,\n          payload: data\n        });\n      } else {\n        dispatch({\n          type: AUTH_ERROR,\n          payload: error.response\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: error.response\n      });\n    });\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    return instance.post('/signout').then(data => {\n      if (data.status === 200) {\n        dispatch({\n          type: LOGOUT_SUCCESS,\n          payload: data\n        });\n      } else {\n        dispatch({\n          type: AUTH_ERROR,\n          payload: error.response\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: error.response\n      });\n    });\n  };\n};","map":{"version":3,"names":["instance","LOGIN_SUCCESS","REGISTER_SUCCESS","AUTH_ERROR","LOGOUT_SUCCESS","login","data","dispatch","post","then","status","type","payload","error","response","catch","register","logout"],"sources":["/home/desktop-47/Desktop/LoginTest/frountend/src/Redux/Action/action.js"],"sourcesContent":["import instance from \"../../Utils/api\";\nimport { LOGIN_SUCCESS , REGISTER_SUCCESS ,AUTH_ERROR, LOGOUT_SUCCESS} from \"../actionType\";\n\nexport const login = (data) =>{\n    return (dispatch) => {\n        return instance.post('/signin', data)\n            .then(data => {\n                if(data.status===200){\n                    dispatch({\n                        type:LOGIN_SUCCESS,\n                        payload: data\n                    })\n                }else{\n                    dispatch({\n                        type:AUTH_ERROR,\n                        payload: error.response\n                    })\n                }\n            })\n            .catch(error => {\n                dispatch({\n                    type:AUTH_ERROR,\n                    payload: error.response\n                })\n            });\n    };\n}\n\nexport const register = (data) =>{\n    \n    return (dispatch) => {\n        return instance.post('/signup', data)\n            .then(data => {\n                if(data.status===200){\n                    dispatch({\n                        type:REGISTER_SUCCESS,\n                        payload: data\n                    })\n                }else{\n                    dispatch({\n                        type:AUTH_ERROR,\n                        payload: error.response\n                    })\n                }\n            })\n            .catch(error => {\n                dispatch({\n                    type:AUTH_ERROR,\n                    payload: error.response\n                })\n            });\n    };\n}\n\nexport const logout = () =>{\n    \n    return (dispatch) => {\n        return instance.post('/signout')\n            .then(data => {\n                if(data.status===200){\n                    dispatch({\n                        type:LOGOUT_SUCCESS,\n                        payload: data\n                    })\n                }else{\n                    dispatch({\n                        type:AUTH_ERROR,\n                        payload: error.response\n                    })\n                }\n            })\n            .catch(error => {\n                dispatch({\n                    type:AUTH_ERROR,\n                    payload: error.response\n                })\n            });\n    };\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,iBAAiB;AACtC,SAASC,aAAa,EAAGC,gBAAgB,EAAEC,UAAU,EAAEC,cAAc,QAAO,eAAe;AAE3F,OAAO,MAAMC,KAAK,GAAIC,IAAI,IAAI;EAC1B,OAAQC,QAAQ,IAAK;IACjB,OAAOP,QAAQ,CAACQ,IAAI,CAAC,SAAS,EAAEF,IAAI,CAAC,CAChCG,IAAI,CAACH,IAAI,IAAI;MACV,IAAGA,IAAI,CAACI,MAAM,KAAG,GAAG,EAAC;QACjBH,QAAQ,CAAC;UACLI,IAAI,EAACV,aAAa;UAClBW,OAAO,EAAEN;QACb,CAAC,CAAC;MACN,CAAC,MAAI;QACDC,QAAQ,CAAC;UACLI,IAAI,EAACR,UAAU;UACfS,OAAO,EAAEC,KAAK,CAACC;QACnB,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,CACDC,KAAK,CAACF,KAAK,IAAI;MACZN,QAAQ,CAAC;QACLI,IAAI,EAACR,UAAU;QACfS,OAAO,EAAEC,KAAK,CAACC;MACnB,CAAC,CAAC;IACN,CAAC,CAAC;EACV,CAAC;AACL,CAAC;AAED,OAAO,MAAME,QAAQ,GAAIV,IAAI,IAAI;EAE7B,OAAQC,QAAQ,IAAK;IACjB,OAAOP,QAAQ,CAACQ,IAAI,CAAC,SAAS,EAAEF,IAAI,CAAC,CAChCG,IAAI,CAACH,IAAI,IAAI;MACV,IAAGA,IAAI,CAACI,MAAM,KAAG,GAAG,EAAC;QACjBH,QAAQ,CAAC;UACLI,IAAI,EAACT,gBAAgB;UACrBU,OAAO,EAAEN;QACb,CAAC,CAAC;MACN,CAAC,MAAI;QACDC,QAAQ,CAAC;UACLI,IAAI,EAACR,UAAU;UACfS,OAAO,EAAEC,KAAK,CAACC;QACnB,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,CACDC,KAAK,CAACF,KAAK,IAAI;MACZN,QAAQ,CAAC;QACLI,IAAI,EAACR,UAAU;QACfS,OAAO,EAAEC,KAAK,CAACC;MACnB,CAAC,CAAC;IACN,CAAC,CAAC;EACV,CAAC;AACL,CAAC;AAED,OAAO,MAAMG,MAAM,GAAG,MAAK;EAEvB,OAAQV,QAAQ,IAAK;IACjB,OAAOP,QAAQ,CAACQ,IAAI,CAAC,UAAU,CAAC,CAC3BC,IAAI,CAACH,IAAI,IAAI;MACV,IAAGA,IAAI,CAACI,MAAM,KAAG,GAAG,EAAC;QACjBH,QAAQ,CAAC;UACLI,IAAI,EAACP,cAAc;UACnBQ,OAAO,EAAEN;QACb,CAAC,CAAC;MACN,CAAC,MAAI;QACDC,QAAQ,CAAC;UACLI,IAAI,EAACR,UAAU;UACfS,OAAO,EAAEC,KAAK,CAACC;QACnB,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,CACDC,KAAK,CAACF,KAAK,IAAI;MACZN,QAAQ,CAAC;QACLI,IAAI,EAACR,UAAU;QACfS,OAAO,EAAEC,KAAK,CAACC;MACnB,CAAC,CAAC;IACN,CAAC,CAAC;EACV,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module"}